{"version":3,"file":"static/js/453.eb75b9c3.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAU,gCAGHC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,0BAHL,OAGK,oBAC8BD,EAD9B,YADU,uBACzBI,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,qDAQnBC,EAAc,mCAAG,WAAMC,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BK,EAA7B,oBAA2CN,IADtC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdG,EAAS,mCAAG,WAAMD,GAAN,yFACAH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACFK,EADE,4BACoBN,IAFpB,uBACfI,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTI,EAAY,mCAAG,WAAMF,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACFK,EADE,4BACoBN,IAFjB,uBAClBI,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZK,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACaD,EADb,kBAC8BU,EAD9B,gCADO,uBACtBN,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,iHCe7B,UA9Ce,WACb,OAAwCO,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACQC,EAAYF,EAAaG,IAAI,aAE7BC,GAAoBC,EAAAA,EAAAA,OAE5BC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdJ,GAAkC,OAAdA,EAAxB,CAEA,IAAMK,EAAe,mCAAG,WAAML,GAAN,mGAEMR,EAAAA,EAAAA,IAAiBQ,GAFvB,gBAEZM,EAFY,EAEZA,QAERV,EAAgBU,GAJI,gDAMpBC,QAAQC,IAAR,SANoB,yDAAH,sDASrBH,EAAgBL,EAXkC,CAYnD,GAAE,CAACA,IASJ,OACE,iCACE,kBAAMS,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfd,EAAgB,CAAEC,UAAWY,EAAKE,SAASd,UAAUe,QACrDH,EAAKI,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,eACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGtB,EAAawB,KAAI,gBAAGC,EAAH,EAAGA,MAAO/B,EAAV,EAAUA,GAAV,OAChB,yBACE,SAAC,KAAD,CAAMgC,GAAE,kBAAahC,GAAMiC,MAAO,CAAEC,KAAMrB,GAA1C,SAAgEkB,KADzD/B,EADO,QAQzB,C","sources":["fetchMovies.js","pages/movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bb93938b285723bfd82d9b17341efab3';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst TiME_WINDOW = 'week';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${API_URL}trending/movie/${TiME_WINDOW}?api_key=${API_KEY}&page=1`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`${API_URL}movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  // console.log(data);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../fetchMovies';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n    const eventname = searchParams.get('eventname');\n    \n    const urlMoviesLocation = useLocation();\n\n  useEffect(() => {\n    if (eventname === '' || eventname === null) return;\n\n    const getSearchMovies = async eventname => {\n      try {\n        const { results } = await fetchSearchMovie(eventname);\n\n        setSearchMovies(results);\n      } catch (error) {\n        console.log(`Error`);\n      }\n    };\n    getSearchMovies(eventname);\n  }, [eventname]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ eventname: form.elements.eventname.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"eventname\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchMovies.map(({ title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: urlMoviesLocation }}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","API_URL","fetchTrendingMovies","axios","data","fetchMovieById","id","fetchCast","fetchReviews","fetchSearchMovie","query","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","eventname","get","urlMoviesLocation","useLocation","useEffect","getSearchMovies","results","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","map","title","to","state","from"],"sourceRoot":""}