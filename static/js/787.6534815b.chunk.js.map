{"version":3,"file":"static/js/787.6534815b.chunk.js","mappings":"yNA+CA,UA3CgB,WACd,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMH,GAAN,mGAEWI,EAAAA,EAAAA,IAAaJ,GAFxB,gBAEPK,EAFO,EAEPA,QAERN,EAAeM,GAJA,gDAMfC,QAAQC,IAAI,SANG,yDAAH,sDAUhBJ,EAAWH,EACZ,GAAE,CAACA,KAKF,gCACGF,EAAYU,OAAS,IACpB,wBACGV,EAAYW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,wBACE,yCAAiBD,QAEnB,uBAAIC,MAJGF,EAOZ,MAGmB,IAAvBZ,EAAYU,SACX,sEAIP,C,8LC3CKK,EAAU,mCACVC,EAAU,gCAGHC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,0BAHL,OAGK,oBAC8BD,EAD9B,YADU,uBACzBI,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,qDAQnBC,EAAc,mCAAG,WAAMR,GAAN,yFACLM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BJ,EAA7B,oBAA2CG,IADtC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdE,EAAS,mCAAG,WAAMT,GAAN,yFACAM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACFJ,EADE,4BACoBG,IAFpB,uBACfI,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTb,EAAY,mCAAG,WAAMM,GAAN,yFACHM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACFJ,EADE,4BACoBG,IAFjB,uBAClBI,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACaD,EADb,kBAC8BQ,EAD9B,gCADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["components/reviews/Reviews.js","fetchMovies.js"],"sourcesContent":["import { fetchReviews } from '../../fetchMovies';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst Reviews = () => {\n  const [dataReviews, setDataReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async movieId => {\n      try {\n        const { results } = await fetchReviews(movieId);\n        // console.log(results);\n        setDataReviews(results);\n      } catch (error) {\n        console.log('Error');\n      }\n    };\n\n    getReviews(movieId);\n  }, [movieId]);\n\n  // console.log(dataReviews);\n\n  return (\n    <>\n      {dataReviews.length > 0 && (\n        <ul>\n          {dataReviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <p>\n                  <strong>Author: {author}</strong>\n                </p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {dataReviews.length === 0 && (\n        <p>We don't have any rewievs for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'bb93938b285723bfd82d9b17341efab3';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst TiME_WINDOW = 'week';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${API_URL}trending/movie/${TiME_WINDOW}?api_key=${API_KEY}&page=1`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`${API_URL}movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  // console.log(data);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["useState","dataReviews","setDataReviews","movieId","useParams","useEffect","getReviews","fetchReviews","results","console","log","length","map","id","author","content","API_KEY","API_URL","fetchTrendingMovies","axios","data","fetchMovieById","fetchCast","fetchSearchMovie","query"],"sourceRoot":""}