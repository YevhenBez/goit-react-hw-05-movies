{"version":3,"file":"static/js/459.ce64e279.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAU,gCAGHC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,0BAHL,OAGK,oBAC8BD,EAD9B,YADU,uBACzBI,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,qDAQnBC,EAAc,mCAAG,WAAMC,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BK,EAA7B,oBAA2CN,IADtC,uBACpBI,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdG,EAAS,mCAAG,WAAMD,GAAN,yFACAH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACFK,EADE,4BACoBN,IAFpB,uBACfI,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTI,EAAY,mCAAG,WAAMF,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACFK,EADE,4BACoBN,IAFjB,uBAClBI,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZK,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACaD,EADb,kBAC8BU,EAD9B,gCADO,uBACtBN,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD,8IClC7B,EAAqC,yC,SCKrC,EANmB,WACf,OACA,0BAAK,mBAAQO,KAAK,SAAb,mBAER,EC8FD,EA3FqB,WACnB,OAA0CC,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAcC,EAAAA,EAAAA,MAgBpB,GAdAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMP,GAAN,iGAEcV,EAAAA,EAAAA,IAAeU,GAF7B,OAEZQ,EAFY,OAGlBT,EAAiBS,GAHC,gDAKlBJ,QAAQC,IAAI,SALM,yDAAH,sDAQnBE,EAAcP,EACf,GAAE,CAACA,IAECF,EAAL,CAEA,IAAMW,EAAQX,EAAcY,YAAd,0CACyBZ,EAAcY,aADvC,sCAGRC,EAAeb,EAAcc,aAAd,WACbd,EAAcc,aAAaC,MAAM,EAAG,GADvB,KAEjB,GAIJ,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIZ,EAAYa,MAAQb,EAAYa,MAAMC,KAAO,UAAvD,UACE,SAAC,EAAD,OAEF,gBAAKC,UAAWC,EAAhB,SACGpB,IACC,iCACE,0BACE,gBAAKqB,IAAKV,EAAOW,IAAKtB,EAAcuB,WAEtC,4BACE,kCAAQvB,EAAcuB,MAAtB,YAA+BV,MAC/B,2CACeW,KAAKC,MAAmC,GAA7BzB,EAAc0B,cADxC,QAGA,sCACA,8BAAI1B,QAAJ,IAAIA,OAAJ,EAAIA,EAAe2B,YACjB3B,EAAc2B,WACd,sEAEF,oCACc,OAAb3B,QAAa,IAAbA,OAAA,EAAAA,EAAe4B,SACd5B,EAAc4B,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAMrC,EAAT,EAASA,GAAT,OACvB,4BAAgBqC,EAAhB,MAAWrC,EADY,KAGzBO,EAAc4B,OAAOG,SACrB,4EAMV,4BACE,oDACA,2BACE,SAAC,KAAD,CACEf,GAAE,OACFC,MAAO,CACLC,KAAMd,EAAYa,MAAQb,EAAYa,MAAMC,KAAO,WAHvD,UAME,oCAEF,SAAC,KAAD,CACEF,GAAE,UACFC,MAAO,CACLC,KAAMd,EAAYa,MAAQb,EAAYa,MAAMC,KAAO,WAHvD,UAME,0CAGJ,SAAC,EAAAc,SAAD,WACE,SAAC,KAAD,WAjEkB,CAsE3B,C","sources":["fetchMovies.js","webpack://react-homework-template/./src/pages/movieDetails/css/movieDetails.module.css?7adb","components/buttonBack/ButtonBack.js","pages/movieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bb93938b285723bfd82d9b17341efab3';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst TiME_WINDOW = 'week';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${API_URL}trending/movie/${TiME_WINDOW}?api_key=${API_KEY}&page=1`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`${API_URL}movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  // console.log(data);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsStyled\":\"movieDetails_movieDetailsStyled__m1QKd\"};","const ButtonBack = () => {\n    return (\n    <div><button type=\"button\">Back</button></div>\n    )\n}\n\nexport default ButtonBack","import React from 'react';\nimport { fetchMovieById } from '../../fetchMovies';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './css/movieDetails.module.css';\nimport ButtonBack from '../../components/buttonBack/ButtonBack';\n\nconst MovieDetails = () => {\n  const [dataMovieById, setDataMovieById] = useState(null);\n  const { movieId } = useParams();\n  const urlLocation = useLocation();\n\n  console.log(urlLocation);\n\n  useEffect(() => {\n    const getMoviesById = async movieId => {\n      try {\n        const resultsMoviesById = await fetchMovieById(movieId);\n        setDataMovieById(resultsMoviesById);\n      } catch (error) {\n        console.log('Error');\n      }\n    };\n    getMoviesById(movieId);\n  }, [movieId]);\n\n  if (!dataMovieById) return;\n\n  const image = dataMovieById.poster_path\n    ? `https://image.tmdb.org/t/p/w500/${dataMovieById.poster_path}`\n    : `https://via.placeholder.com/500x750`;\n  const releaseMovie = dataMovieById.release_date\n    ? `(${dataMovieById.release_date.slice(0, 4)})`\n    : '';\n\n  //   console.log(dataMovieById);\n\n  return (\n    <>\n      <Link to={urlLocation.state ? urlLocation.state.from : '/movies'}>\n        <ButtonBack />\n      </Link>\n      <div className={css.movieDetailsStyled}>\n        {dataMovieById && (\n          <>\n            <div>\n              <img src={image} alt={dataMovieById.title} />\n            </div>\n            <div>\n              <h1>{`${dataMovieById.title} ${releaseMovie}`}</h1>\n              <span>\n                User Score: {Math.round(dataMovieById.vote_average * 10)}%\n              </span>\n              <h2>Overview</h2>\n              <p>{dataMovieById?.overview}</p>\n              {!dataMovieById.overview && (\n                <p>We don't have any overwiev for this movie</p>\n              )}\n              <h3>Genres</h3>\n              {dataMovieById?.genres &&\n                dataMovieById.genres.map(({ name, id }) => (\n                  <span key={id}>{name} </span>\n                ))}\n              {!dataMovieById.genres.length && (\n                <p>We don't have any genres for this movie</p>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n      <div>\n        <h4>Additional information</h4>\n        <ul>\n          <Link\n            to={`cast`}\n            state={{\n              from: urlLocation.state ? urlLocation.state.from : '/movies',\n            }}\n          >\n            <li>Cast</li>\n          </Link>\n          <Link\n            to={`reviews`}\n            state={{\n              from: urlLocation.state ? urlLocation.state.from : '/movies',\n            }}\n          >\n            <li>Reviews</li>\n          </Link>\n        </ul>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","API_URL","fetchTrendingMovies","axios","data","fetchMovieById","id","fetchCast","fetchReviews","fetchSearchMovie","query","type","useState","dataMovieById","setDataMovieById","movieId","useParams","urlLocation","useLocation","console","log","useEffect","getMoviesById","resultsMoviesById","image","poster_path","releaseMovie","release_date","slice","to","state","from","className","css","src","alt","title","Math","round","vote_average","overview","genres","map","name","length","Suspense"],"sourceRoot":""}